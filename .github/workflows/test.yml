name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the current and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23', '1.24']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Generate piano samples for testing
      run: go generate ./...
    
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt ./...
    
    - name: Run tests with debug output
      run: DEBUG=sfzplayer:* go test -v ./...
    
    - name: Run render test to generate audio
      run: go test -v -run "TestRenderPianoArpeggio"
    
    - name: Check code formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted properly:"
          gofmt -s -l .
          exit 1
        fi
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Upload coverage reports to Codecov
      if: matrix.go-version == '1.24'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload rendered piano arpeggio
      if: matrix.go-version == '1.24'
      uses: actions/upload-artifact@v4
      with:
        name: piano-arpeggio-render
        path: testdata/piano_arpeggio.wav
        retention-days: 90

    - name: Setup Pages
      if: matrix.go-version == '1.24' && github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload audio to GitHub Pages (for direct media embedding)
      if: matrix.go-version == '1.24' && github.ref == 'refs/heads/main'
      run: |
        mkdir -p _site
        cp testdata/piano_arpeggio.wav _site/
        
    - name: Upload artifact for GitHub Pages
      if: matrix.go-version == '1.24' && github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./_site
        
    - name: Deploy to GitHub Pages
      if: matrix.go-version == '1.24' && github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4